def build_corpus(corpus_name, scen_id, scen, scen_short, scen_par = None, 
                                    new_urls = True, new_qs = False):
    scen = scen.replace(' ', '_')
    scen_short = scen.replace(' ', '_')
    scen_par = scen_par.replace(' ', '_')




  with open(corpus_f,'w') as c:
    c.write(''.join(('<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\t',
        '<corpus eventid="', '1234', #TODO how get eventid, as function param
        '" scenario="'+scen.replace('_',' ')+'" short="'+scen_short.replace('_',' ')+'" time="', timestamp(), 
        '" potential_queries="', query_f, '">\n')))
  #TODO get scenario names from function parameters




def get_all_corpora_gen(new_urls = True, new_qs = False):
  shorts = ["fast_food","food_back","laundry","coffee","dog", "microwave",
                            "credit_card","vending_machine","letter","shower"]      
    ids = [2, 3 ,56, 111, 66 , 92, 11, 31, 101, 14]
  not_so_shorts = ["fast food restaurant", "send food back", "do laundry", 
                                     "make coffee", "feed a dog", #"phone", "iron",
                                    "heat sth in microwave", "pay w credit card", 
                                    "buy f vending machine", "mail a letter", "take a shower"]

    scenarios = ['eat_in_fast_food_restaurant_filtered', 'send_food_back_filtered', 
                            'do_laundry', 'make_coffee', 'feed_a_pet_dog', 'heat_food_in_microwave', 
                            'pay_with_credit_card_filtered', 'buy_from_vending_machine', 
                            'mail_a_letter', 'take_a_shower_filtered'] 
    participants = ['fast_food_restaurant', 'food_back', 
                            'laundry', 'coffee', 'dog', 'microwave', 
                            'credit_card', 'vending_machine', 
                            'letter', 'shower'] 


    for i in range(10):
        yield 'will create' + scenarios[i]
        build_corpus(scenarios[i], ids[i], scenarios[i], shorts[i], participants[i], new_urls, new_qs)
        yield 'created' + scenarios[i]

    yield 'created all 10 corpora'
    return




-------------------------------
####  createQueries.py

for now long and short name
def createQueries(scen, outf,p_from_scen = None, log_f = stdout):

  print("Creating queries for " + scen.replace('_',' ') + ' scenario')

  participants = M.getParticipants('../res/Lists/participants/' + scen + 
                                    '_sets','l') 
#TODO these are nt so short names, change to gold sets?

  #vos


 #vos
  vo_pairs = set()
  rel_p = re.compile('(\w+)\((\w+)-(\d+), (\w+)-(\d+)\)') #dependency relation pattern
  verb = obj = None
  deps = set()
  with open('../res/ParseData/dep/' + 'feed_a_pet_dog.dep') as dep:
    for line in dep:
      if not line.strip():

change above and eveything that has scen (to short name), scen must mean  long name



if __name__ == '__main__':
  createQueries('feed_a_pet_dog','dog','cq.dog_queries_text.txt')
